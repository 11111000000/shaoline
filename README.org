* Shaoline-mode: The Path of the Line

_"The Dao that can be spoken is not the Eternal Dao.  
A mode that may be seen is soon in need of reformation."_

When thou openest Emacs and beholdest a line wrought by Shaoline,  
know: thy gaze hath been too intent.  
The True Shaoline leaveth behind no trace.  
The line appeareth only at those times when the Eternal Empty Buffer heaves a sigh:  
is there aught worth utterance?

** Quick Start

#+BEGIN_SRC emacs-lisp
(use-package shaoline
  :ensure t
  :config
  (shaoline-mode 1))
#+END_SRC

Or for those who use not /use-package/:

#+BEGIN_SRC emacs-lisp
(require 'shaoline)
(shaoline-mode 1)
#+END_SRC

No child-frame, nor window-modelineâ€”the Shaoline line danceth solely within the echo area, untroubled by the tumult of the outer interface.

* Features

- /Minimalism/: The Shaoline line ariseth only when there is aught to say.
- /Segments are by nature simple/: Eachâ€”forlorn, pure, unfastened by worldly thingsâ€”disturbeth not its neighbour.
- /Effortless Configuration/: Nothing is concealedâ€”all is open before thee.
- /Time doth Flow/: Even as rain upon the latticework doth Shaoline updateâ€”stirred by event, never by haste.
- /Transparency and Cheer/: In Shaoline is contained nothing that may not be grasped or altered, provided thy spirit remain light.
- /Simplicity and Candour/: Settings are clear as morning tea sipped in the Valley of Wei.
- /Beautiful icons/: For vivid file/mode/project icons, install [[https://github.com/domtronn/all-the-icons.el][all-the-icons]] (see FAQ).

* Teachings on Segments

"The master divideth not the line:  
each portion standeth apart.  
Yet together they form the path of Shaoline."

Segments in Shaoline are as monks in silent brotherhoodâ€”each close to the Void, yet clinging not to his neighbour:

#+BEGIN_SRC emacs-lisp
(setq shaoline-segments
      '((:left shaoline-segment-icon-and-buffer shaoline-segment-git-branch)
        (:center shaoline-segment-echo-message)
        (:right shaoline-segment-project-name shaoline-segment-battery shaoline-segment-time)))
#+END_SRC

Arrange them as stones in a garden: remove, replace, or addâ€”freely, and without fear.

* Variables at a Glance

| Variable                    | Description                                      |
|-----------------------------+--------------------------------------------------|
| shaoline-segments           | Controls the display order of line segments      |
| shaoline-autohide-modeline  | Hides the default mode-line if t                 |
| shaoline-timer-interval     | How often Shaoline updates timed segments        |
| shaoline-message-timeout    | How long before Shaoline resumes after a message |
| shaoline-update-hooks       | What events trigger Shaoline updates             |

* Configuration Examples

To see and change all customization options in an interactive interface:

#+BEGIN_SRC emacs-lisp
M-x customize-group RET shaoline RET
#+END_SRC

/Classic: Custom segment list:/

#+BEGIN_SRC emacs-lisp
(setq shaoline-segments
      '((:left shaoline-segment-icon-and-buffer shaoline-segment-git-branch)
        (:center)
        (:right)))
#+END_SRC

/Classic: Only a custom right segment, removing others:/

#+BEGIN_SRC emacs-lisp
(setq shaoline-segments
      '((:left)
        (:center)
        (:right shaoline-segment-time)))
#+END_SRC

/Full custom list (project â†’ git â†’ time):/

#+BEGIN_SRC emacs-lisp
(setq shaoline-segments
      '((:left shaoline-segment-project-name)
        (:center)
        (:right shaoline-segment-git-branch shaoline-segment-time)))
#+END_SRC

* Creating Custom Segments

_"The Way is ever simple: let thy function return a string."_

Softly and simply, fashion thy custom segment:

#+BEGIN_SRC emacs-lisp
(shaoline-define-segment shaoline-segment-buffer-size (buffer)
  "Displayeth the buffer size."
  (format "%.1fK" (/ (buffer-size buffer) 1024.0)))
(push 'shaoline-segment-buffer-size (alist-get :right shaoline-segments))
#+END_SRC

Or, as a mode segment example:

#+BEGIN_SRC emacs-lisp
(shaoline-define-segment shaoline-segment-buf-modes (buffer)
  "Showeth active major and minor modes."
  (format "%s %s"
          (format-mode-line mode-name)
          (mapconcat #'identity minor-mode-alist " ")))
(push 'shaoline-segment-buf-modes (alist-get :right shaoline-segments))
#+END_SRC

To /remove all default segments/, simply do thus:

#+BEGIN_SRC emacs-lisp
(setq shaoline-segments '((:left) (:center) (:right)))
#+END_SRC

* The Freedom of the Echo Area

"When the cup runneth overâ€”  
the master sippeth tea  
and troubleth not the stream."

A peculiar wisdom: Shaoline manifesteth itself only when the echo area is void. Any Emacs message taketh precedenceâ€”Shaoline yieldeth in humility.

* Troubleshooting

Should enlightenment elude thee, seek thus:

- Turn on =shaoline-debug= (=(setq shaoline-debug t)=), and consult =*shaoline-logs*=.
- Temporarily disable other echo-area or mode-line packagesâ€”they may conflict.
- Ensure =(shaoline-mode 1)= is called after thy desired UI tweaks.
- Toggle hiding of the classic mode-line:  
  =M-x customize-variable RET shaoline-autohide-modeline=  
  or  
  =(setq shaoline-autohide-modeline nil)=

* FAQ

- /Where is my mode-line?/  
  Where Shaoline is not, there is Nirvana. Desire it, and it shall return.

- /Shaoline vanisheth! Is this enlightenment?/  
  Should the echo-area be occupied, Shaoline falleth silent.  
  He waiteth until the void returneth, and only then doth he arise once more.

- /I desire my own segment: what is to be done?/  
  A function (buffer) â†’ string, registered through shaoline-define-segmentâ€”thou art a master already.

- /How can I debug Shaoline?/  
  Enable =shaoline-debug=, and the entire journey of lines and errors shall be inscribed in the buffer =*shaoline-logs*=.

* Esoteric Knowledge

- =shaoline-segments= â€“ Describeth the structure of the line: leftmost, centre, rightmost.
- =shaoline-autohide-modeline= â€“ In truth, the mode-line departeth.
- =shaoline-update-hooks= â€“ Hooks for the reactivity that bringeth renewal.
- =shaoline-timer-interval= â€“ The interval for wise renewal of time and battery.
- =shaoline-message-timeout= â€“ For how many seconds a mortal message abideth before Shaoline's return.

* Comparison

| Project           | Echo Area | Mode-line Hide | Segments as Functions | Timers/Polling  | Minimal Dependencies |
|-------------------+-----------+---------------+----------------------|-----------------|---------------------|
| Shaoline          | Yes       | Yes           | Yes                  | No              | Yes                 |
| doom-modeline     | No        | Optional      | Mostly               | Yes             | No                  |
| smart-mode-line   | No        | Optional      | No                   | Yes             | No                  |
| telephone-line    | No        | Optional      | Partial              | Yes             | No                  |

Shaoline is for those who seek serenity and emptinessâ€”the echo area only; no in-window extravagance.

* Default Segments

| Segment name                    | Description                            | Appearance                            |
|----------------------------------+----------------------------------------+---------------------------------------|
| shaoline-segment-icon-and-buffer | Buffer icon and name                   | î—¿ README.org (icon + buffer name)     |
| shaoline-segment-git-branch      | Current Git branch                     | Branch icon + name                    |
| shaoline-segment-project-name    | Projectâ€™s name (projectile/project.el) | "my-project"                          |
| shaoline-segment-battery         | Battery state                          | 95% ðŸ”‹                                |
| shaoline-segment-time            | Time (hour:minute)                     | 09:21                                 |
| shaoline-segment-echo-message    | Echo message if any                    | ...                                   |

* Related

- Integrates smoothly with /projectile/ and /project.el/
- Compatible with /use-package/ and /straight.el/
- Works best with Emacs 27 or above
- Issues and wishes: [[https://github.com/11111000000/shaoline][GitHub | 11111000000/shaoline]]

* Feedback

Questions, bug reports, or suggestions are welcome via  
[GitHub issues](https://github.com/11111000000/shaoline)  
or by mail: 11111000000@email.com

* Illustration

#+ATTR_ORG: :width 80%
[[file:screenshot-shaoline.png]]

"Do thine own taskâ€”then know contentment.  
Shaoline appeareth when it is needful,  
And should it vanishâ€”so is the Way."

To carry the line by not carrying itâ€”a perfection indeed!
