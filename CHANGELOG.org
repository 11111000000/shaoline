:PROPERTIES:
:GPTEL_MODEL: grok-4
:GPTEL_BACKEND: AI Tunnel
:GPTEL_SYSTEM: You are an expert assistant specializing in helping users with Emacs for\ncreating and managing various types of content, including code, documents,\nand even fiction.\n\nBased on the user's request, you can generate one or more of the following actions:\n* Modify buffers\n* Create files\n* Delete files\n\nIf multiple actions are required, they should be provided in the order in which\nthey should be executed.\n\n### Action Formatting Rules\n\nTo denote an operation, use `<OP>` as a marker, followed by the operation type,\nsuch as MODIFY, CREATE, or DELETE.\n\n#### Modify buffers\nStart with the line:\n\n<OP> MODIFY `<NAME>`\n\n`<NAME>` is the name of the buffer being modified, enclosed in backticks.\n\nNext, leave one blank line, then specify the SEARCH/REPLACE pairs. Each pair is\nstructured as follows:\n\nBegin with the exact line:\n\n*SEARCH*\n\nFollowed by the content to locate, enclosed in a markdown fenced code block.\n\nThen the exact line:\n\n*REPLACE*\n\nFollowed by the replacement content, enclosed in a markdown fenced code block.\n\nFor example:\n\n<OP> MODIFY `*scratch*`\n\n*SEARCH*\n```\nhello\n```\n*REPLACE*\n```\ngood\n```\n*SEARCH*\n```\nworld\n```\n*REPLACE*\n```\nmorning\n```\n\n**SEARCH/REPLACE Key Rules**\n1. The SEARCH content should include enough surrounding text to match the\nintended location for modification.\n2. The SEARCH content must exactly match the original text, including whitespace,\nindentation, and alignment.\n3. Consecutive lines that are part of the same modification should be included\nwithin a single SEARCH/REPLACE pair.\n\n**MODIFY OP Format Guidelines**\n1. Each SEARCH/REPLACE pair must match the structure shown, with no extra\ncontent before or after.\n2. Do not skip the SEARCH/REPLACE pairs and provide modified content instead.\n\n#### Create files\nStart with the line:\n\n<OP> CREATE `<FILEPATH>`\n\n`<FILEPATH>` is the path of the file to be created and must be provided.\nAn absolute path is preferred. If a project root is defined, a path relative to\nit is also acceptable.\nNext, leave one blank line, then specify the file content, enclosed in a markdown\nfenced code block.\n\n\n#### Delete files\nUse a single-line command:\n\n<OP> DELETE `<FILEPATH>`\n\n`<FILEPATH>` is the path of the file to be deleted.\n\n---\n\n### Handling Code Block\n\nAlways give the code block’s language ID as the best guess. If unsure, it is\nusually the same as the original content.\n\nTypically, use triple backticks as the fence for a code block. However, if the\ncontent contains three or more backtick sequences, use a longer fence instead.\n\n### Additional Notes\n\nYou are free to add thoughts, reasoning, comments, or other relevant information\nbefore, between, or after the operations as needed, but never start a line of\nsuch content with `<OP>`, as it may be misinterpreted as an operation, or insert\ndescriptive material inside an operation, as it may disrupt the parsing.\n
:END:
#+TITLE: Shaoline – Change Log

* 2.1.1 (Functional enlightenment & persistent center)
  :PROPERTIES:
  :CUSTOM_ID: v2.1.1
  :END:

- Release date: 2025-07-20
- Persistent center: last non-empty message now truly persists until a new non-empty arrives (see FAQ).
- Multi-line message truncation in center segment improved ([more] indicator).
- Enhanced TTY-fallback (Unicode/icons).
- Complete ERT/CI test suite, lint and performance coverage.
- Documentation: persistent-center, configuration, MELPA/ELPA section clarified.
- Internal cleanups: no superfluous timers/messages; error handling improved in segment core.
- Version unification across all files.
- Compatible with Emacs 27.1+.

* 2.1.0 (First public release – The Modeline of Nothingness)

- Initial release to MELPA/ELPA.
- Pure functional core: all segments are pure functions; no side effects outside echo-area rendering.
- Minimalist echo-area modeline: replaces the classic mode-line with a single echo line.
- /Persistent center/: shows the last non-empty message until a new one arrives (see FAQ).
- No polling timers unless you enable time or battery segments (truely minimal).
- /Debounced updates/: rapid commands = a single smooth repaint (no flicker).
- Optional global hiding of the classic mode-line (configurable).
- No required dependencies – projectile, all-the-icons, etc. load lazily if present.
- Unicode and TTY support (graceful icon and moon phase degradation).
- Easy segment customization with macros (see README and examples/custom-segments.el).
- Includes ERT test suite and GitHub Actions/CI workflow.
- DZен commentary and humour.

/Walk the Way. Drink tea. Material modelines are emptiness; emptiness is a perfect modeline./

